{"version":3,"file":"content.bundle.js","mappings":";;;;;;;;;;;;;;;AAAyC;AAWlC,SAAS,aAAa,CAAC,GAAW,EAAE,KAAe;IACxD,IAAI,KAAK,CAAC,cAAc,EAAE,EAAE;QAC1B,gBAAgB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KAC9B;SAAM,IAAI,KAAK,CAAC,cAAc,EAAE,EAAE;QACjC,gBAAgB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KAC9B;SAAM,IAAI,KAAK,CAAC,cAAc,EAAE,EAAE;QACjC,gBAAgB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KAC9B;AACH,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAW,EAAE,KAAe;IACpD,QAAQ,GAAG,EAAE;QACX,KAAK,GAAG;YACN,KAAK,CAAC,OAAO,CAAC,wCAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,MAAM;QACR,KAAK,GAAG;YACN,KAAK,CAAC,OAAO,CAAC,wCAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,MAAM;QACR,KAAK,GAAG;YACN,cAAc,EAAE,CAAC;YACjB,MAAM;QACR,KAAK,GAAG;YACN,cAAc,EAAE,CAAC;YACjB,MAAM;QACR,KAAK,GAAG;YACN,YAAY,EAAE,CAAC;YACf,MAAM;QACR,KAAK,GAAG;YACN,eAAe,EAAE,CAAC;YAClB,MAAM;QACR,KAAK,GAAG;YACN,IAAI,KAAK,CAAC,cAAc,EAAE,EAAE;gBAC1B,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAC3B;iBAAM;gBACL,iBAAiB,EAAE,CAAC;aACrB;YACD,MAAM;QACR,KAAK,GAAG;YACN,QAAQ,CAAC,KAAK,CAAC,CAAC;YAChB,MAAM;QACR,KAAK,GAAG;YACN,SAAS,CAAC,KAAK,CAAC,CAAC;YACjB,MAAM;QACR,KAAK,GAAG;YACN,qBAAqB,EAAE,CAAC;YACxB,MAAM;QACR,KAAK,GAAG;YACN,mBAAmB,EAAE,CAAC;YACtB,MAAM;QACR;YACE,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,EAAE,CAAC,CAAC;YAC5C,MAAM;KACT;AACH,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAW,EAAE,KAAe;IACpD,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,KAAK,EAAE;QACrC,KAAK,CAAC,OAAO,CAAC,wCAAI,CAAC,MAAM,CAAC,CAAC;KAC5B;AACH,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAW,EAAE,KAAe;IACpD,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,KAAK,EAAE;QACrC,KAAK,CAAC,OAAO,CAAC,wCAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,cAAc,EAAE,CAAC;KAClB;SAAM;QACL,QAAQ,GAAG,EAAE;YACX,KAAK,GAAG;gBACN,mBAAmB,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,GAAG;gBACN,mBAAmB,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,GAAG;gBACN,iBAAiB,EAAE,CAAC;gBACpB,MAAM;YACR,KAAK,GAAG;gBACN,oBAAoB,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,GAAG;gBACN,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAChB,KAAK,CAAC,OAAO,CAAC,wCAAI,CAAC,MAAM,CAAC,CAAC;gBAC3B,MAAM;YACR,KAAK,GAAG;gBACN,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAC1B,KAAK,CAAC,OAAO,CAAC,wCAAI,CAAC,MAAM,CAAC,CAAC;gBAC3B,MAAM;SACT;KACF;AACH,CAAC;AAED,SAAS,QAAQ,CAAC,KAAe;IAC/B,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;IACxC,IAAI,SAAS,IAAI,SAAS,CAAC,QAAQ,EAAE,EAAE;QACrC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzC,cAAc,EAAE,CAAC;KAClB;SAAM;QACL,qCAAqC;QACrC,6BAA6B,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;QACjE,MAAM,aAAa,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QAC5C,IAAI,aAAa,EAAE;YACjB,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7C,cAAc,EAAE,CAAC;SAClB;KACF;AACH,CAAC;AAED,SAAS,SAAS,CAAC,KAAe;IAChC,MAAM,aAAa,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;IAC3C,IAAI,aAAa,EAAE;QACjB,gDAAgD;QAChD,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrD,6BAA6B,CAAC,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;KACJ;AACH,CAAC;AAED,SAAS,kBAAkB,CAAC,KAAe;IACzC,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;IACxC,IAAI,SAAS,IAAI,SAAS,CAAC,QAAQ,EAAE,EAAE;QACrC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,oCAAoC;QAC9E,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KAC5B;AACH,CAAC;AAED,SAAS,cAAc;;IACrB,YAAM,CAAC,YAAY,EAAE,0CAAE,eAAe,EAAE,CAAC;AAC3C,CAAC;AAED,SAAS,mBAAmB;IAC1B,6BAA6B,CAAC,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;AACxD,CAAC;AAED,SAAS,oBAAoB;IAC3B,6BAA6B,CAAC,CAAC,OAAO,CAAC,EAAE,YAAY,CAAC,CAAC;AACzD,CAAC;AAED,SAAS,iBAAiB;IACxB,6BAA6B,CAAC,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,CAAC;AACtD,CAAC;AAED,SAAS,mBAAmB;IAC1B,6BAA6B,CAAC,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;AACxD,CAAC;AAED,SAAS,qBAAqB;IAC5B,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAC3B,CAAC;AAED,SAAS,mBAAmB;IAC1B,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC1B,CAAC;AAED,0DAA0D;AAC1D,SAAS,cAAc;IACrB,gBAAgB,CAAC,WAAW,CAAC,CAAC;AAChC,CAAC;AAED,SAAS,eAAe;IACtB,gBAAgB,CAAC,YAAY,CAAC,CAAC;AACjC,CAAC;AAED,SAAS,YAAY;IACnB,gBAAgB,CAAC,SAAS,CAAC,CAAC;AAC9B,CAAC;AAED,SAAS,cAAc;IACrB,gBAAgB,CAAC,WAAW,CAAC,CAAC;AAChC,CAAC;AAED,SAAS,iBAAiB;IACxB,6BAA6B,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;IACjE,gBAAgB,CAAC,WAAW,CAAC,CAAC;AAChC,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAW;IACnC,MAAM,KAAK,GAAG,IAAI,aAAa,CAAC,SAAS,EAAE;QACzC,GAAG,EAAE,GAAG;QACR,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,IAAI;KACjB,CAAC,CAAC;IACH,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;AAED,SAAS,6BAA6B,CAAC,SAAmB,EAAE,GAAW;IACrE,MAAM,SAAS,GAAsB;QACnC,GAAG,EAAE,GAAG;QACR,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,IAAI;QAChB,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC;QACrC,OAAO,EAAE,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC;QACtC,MAAM,EAAE,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC;QACjC,OAAO,EAAE,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;KACpC,CAAC;IACF,MAAM,KAAK,GAAG,IAAI,aAAa,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IACtD,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;;;;;;;;;;;;;;;;AC/MD,IAAY,IAIX;AAJD,WAAY,IAAI;IACd,yBAAiB;IACjB,yBAAiB;IACjB,yBAAiB;AACnB,CAAC,EAJW,IAAI,KAAJ,IAAI,QAIf;AAEM,MAAM,QAAQ;IAArB;QACU,UAAK,GAAS,IAAI,CAAC,MAAM,CAAC;QAC1B,eAAU,GAAW,EAAE,CAAC;IAsClC,CAAC;IApCC,OAAO,CAAC,OAAa;QACnB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,eAAe,OAAO,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC;IACpC,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC;IACpC,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC;IACpC,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAEO,eAAe;QACrB,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAC5D,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,WAAW,GAAG,SAAS,IAAI,CAAC,KAAK,EAAE,CAAC;SAC/C;IACH,CAAC;CACF;;;;;;;UC9CD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA,iBAAiB;AAEwB;AACE;AAE3C,uBAAuB;AACvB,MAAM,KAAK,GAAG,IAAI,4CAAQ,EAAE,CAAC;AAE7B,oCAAoC;AACpC,SAAS,eAAe;IACtB,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAChD,SAAS,CAAC,EAAE,GAAG,gBAAgB,CAAC;IAChC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;IACnC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;IAC7B,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IAC3B,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;IAC/B,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IAChC,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,SAAS,CAAC;IAC5C,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC;IAClC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,WAAW,CAAC;IACzC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;IAClC,SAAS,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;IACrC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IAChC,SAAS,CAAC,WAAW,GAAG,SAAS,KAAK,CAAC,IAAI,EAAE,CAAC;IAC9C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACvC,CAAC;AAED,2BAA2B;AAC3B,SAAS,IAAI;IACX,eAAe,EAAE,CAAC;IAElB,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,EAAE;QAC7C,MAAM,aAAa,GAAG,QAAQ,CAAC,aAA4B,CAAC;QAE5D,kEAAkE;QAClE,IACE,KAAK,CAAC,cAAc,EAAE;YACtB,CAAC,aAAa,CAAC,OAAO,KAAK,OAAO;gBAChC,aAAa,CAAC,OAAO,KAAK,UAAU;gBACpC,aAAa,CAAC,iBAAiB,CAAC,EAClC;YACA,OAAO;SACR;QAED,gDAAgD;QAChD,MAAM,eAAe,GAAG;YACtB,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,QAAQ;YACR,KAAK;SACN,CAAC;QACF,IAAI,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACvC,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,wDAAa,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACjC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,+CAA+C;AAC/C,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC","sources":["webpack://vim-google-docs-extension/./src/commands.ts","webpack://vim-google-docs-extension/./src/state.ts","webpack://vim-google-docs-extension/webpack/bootstrap","webpack://vim-google-docs-extension/webpack/runtime/define property getters","webpack://vim-google-docs-extension/webpack/runtime/hasOwnProperty shorthand","webpack://vim-google-docs-extension/webpack/runtime/make namespace object","webpack://vim-google-docs-extension/./src/content.ts"],"sourcesContent":["import { VimState, Mode } from \"./state\";\r\n\r\n// Add clipboard state to VimState\r\ndeclare module \"./state\" {\r\n  interface VimState {\r\n    clipboard: string;\r\n    setClipboard(text: string): void;\r\n    getClipboard(): string;\r\n  }\r\n}\r\n\r\nexport function handleCommand(key: string, state: VimState) {\r\n  if (state.isInNormalMode()) {\r\n    handleNormalMode(key, state);\r\n  } else if (state.isInInsertMode()) {\r\n    handleInsertMode(key, state);\r\n  } else if (state.isInVisualMode()) {\r\n    handleVisualMode(key, state);\r\n  }\r\n}\r\n\r\nfunction handleNormalMode(key: string, state: VimState) {\r\n  switch (key) {\r\n    case \"i\":\r\n      state.setMode(Mode.INSERT);\r\n      break;\r\n    case \"v\":\r\n      state.setMode(Mode.VISUAL);\r\n      break;\r\n    case \"h\":\r\n      moveCursorLeft();\r\n      break;\r\n    case \"j\":\r\n      moveCursorDown();\r\n      break;\r\n    case \"k\":\r\n      moveCursorUp();\r\n      break;\r\n    case \"l\":\r\n      moveCursorRight();\r\n      break;\r\n    case \"d\":\r\n      if (state.isInVisualMode()) {\r\n        deleteSelectedText(state);\r\n      } else {\r\n        deleteCurrentLine();\r\n      }\r\n      break;\r\n    case \"y\":\r\n      yankText(state);\r\n      break;\r\n    case \"p\":\r\n      pasteText(state);\r\n      break;\r\n    case \"0\":\r\n      moveCursorToLineStart();\r\n      break;\r\n    case \"$\":\r\n      moveCursorToLineEnd();\r\n      break;\r\n    default:\r\n      console.log(`Unrecognized command: ${key}`);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction handleInsertMode(key: string, state: VimState) {\r\n  if (key === \"Escape\" || key === \"Esc\") {\r\n    state.setMode(Mode.NORMAL);\r\n  }\r\n}\r\n\r\nfunction handleVisualMode(key: string, state: VimState) {\r\n  if (key === \"Escape\" || key === \"Esc\") {\r\n    state.setMode(Mode.NORMAL);\r\n    clearSelection();\r\n  } else {\r\n    switch (key) {\r\n      case \"h\":\r\n        extendSelectionLeft();\r\n        break;\r\n      case \"j\":\r\n        extendSelectionDown();\r\n        break;\r\n      case \"k\":\r\n        extendSelectionUp();\r\n        break;\r\n      case \"l\":\r\n        extendSelectionRight();\r\n        break;\r\n      case \"y\":\r\n        yankText(state);\r\n        state.setMode(Mode.NORMAL);\r\n        break;\r\n      case \"d\":\r\n        deleteSelectedText(state);\r\n        state.setMode(Mode.NORMAL);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction yankText(state: VimState) {\r\n  const selection = window.getSelection();\r\n  if (selection && selection.toString()) {\r\n    state.setClipboard(selection.toString());\r\n    clearSelection();\r\n  } else {\r\n    // If no selection, yank current line\r\n    simulateKeyPressWithModifiers([\"Control\", \"Shift\"], \"ArrowLeft\");\r\n    const lineSelection = window.getSelection();\r\n    if (lineSelection) {\r\n      state.setClipboard(lineSelection.toString());\r\n      clearSelection();\r\n    }\r\n  }\r\n}\r\n\r\nfunction pasteText(state: VimState) {\r\n  const clipboardText = state.getClipboard();\r\n  if (clipboardText) {\r\n    // Use the browser's clipboard API to paste text\r\n    navigator.clipboard.writeText(clipboardText).then(() => {\r\n      simulateKeyPressWithModifiers([\"Control\"], \"v\");\r\n    });\r\n  }\r\n}\r\n\r\nfunction deleteSelectedText(state: VimState) {\r\n  const selection = window.getSelection();\r\n  if (selection && selection.toString()) {\r\n    state.setClipboard(selection.toString()); // Save to clipboard before deleting\r\n    simulateKeyPress(\"Delete\");\r\n  }\r\n}\r\n\r\nfunction clearSelection() {\r\n  window.getSelection()?.removeAllRanges();\r\n}\r\n\r\nfunction extendSelectionLeft() {\r\n  simulateKeyPressWithModifiers([\"Shift\"], \"ArrowLeft\");\r\n}\r\n\r\nfunction extendSelectionRight() {\r\n  simulateKeyPressWithModifiers([\"Shift\"], \"ArrowRight\");\r\n}\r\n\r\nfunction extendSelectionUp() {\r\n  simulateKeyPressWithModifiers([\"Shift\"], \"ArrowUp\");\r\n}\r\n\r\nfunction extendSelectionDown() {\r\n  simulateKeyPressWithModifiers([\"Shift\"], \"ArrowDown\");\r\n}\r\n\r\nfunction moveCursorToLineStart() {\r\n  simulateKeyPress(\"Home\");\r\n}\r\n\r\nfunction moveCursorToLineEnd() {\r\n  simulateKeyPress(\"End\");\r\n}\r\n\r\n// Existing movement and utility functions remain the same\r\nfunction moveCursorLeft() {\r\n  simulateKeyPress(\"ArrowLeft\");\r\n}\r\n\r\nfunction moveCursorRight() {\r\n  simulateKeyPress(\"ArrowRight\");\r\n}\r\n\r\nfunction moveCursorUp() {\r\n  simulateKeyPress(\"ArrowUp\");\r\n}\r\n\r\nfunction moveCursorDown() {\r\n  simulateKeyPress(\"ArrowDown\");\r\n}\r\n\r\nfunction deleteCurrentLine() {\r\n  simulateKeyPressWithModifiers([\"Control\", \"Shift\"], \"ArrowLeft\");\r\n  simulateKeyPress(\"Backspace\");\r\n}\r\n\r\nfunction simulateKeyPress(key: string) {\r\n  const event = new KeyboardEvent(\"keydown\", {\r\n    key: key,\r\n    bubbles: true,\r\n    cancelable: true,\r\n  });\r\n  document.dispatchEvent(event);\r\n}\r\n\r\nfunction simulateKeyPressWithModifiers(modifiers: string[], key: string) {\r\n  const eventInit: KeyboardEventInit = {\r\n    key: key,\r\n    bubbles: true,\r\n    cancelable: true,\r\n    shiftKey: modifiers.includes(\"Shift\"),\r\n    ctrlKey: modifiers.includes(\"Control\"),\r\n    altKey: modifiers.includes(\"Alt\"),\r\n    metaKey: modifiers.includes(\"Meta\"),\r\n  };\r\n  const event = new KeyboardEvent(\"keydown\", eventInit);\r\n  document.dispatchEvent(event);\r\n}\r\n","export enum Mode {\r\n  NORMAL = \"NORMAL\",\r\n  INSERT = \"INSERT\",\r\n  VISUAL = \"VISUAL\",\r\n}\r\n\r\nexport class VimState {\r\n  private _mode: Mode = Mode.NORMAL;\r\n  private _clipboard: string = \"\";\r\n\r\n  setMode(newMode: Mode) {\r\n    this._mode = newMode;\r\n    console.log(`Switched to ${newMode} mode.`);\r\n    this.updateStatusBar();\r\n  }\r\n\r\n  get mode(): Mode {\r\n    return this._mode;\r\n  }\r\n\r\n  isInInsertMode(): boolean {\r\n    return this._mode === Mode.INSERT;\r\n  }\r\n\r\n  isInNormalMode(): boolean {\r\n    return this._mode === Mode.NORMAL;\r\n  }\r\n\r\n  isInVisualMode(): boolean {\r\n    return this._mode === Mode.VISUAL;\r\n  }\r\n\r\n  setClipboard(text: string) {\r\n    this._clipboard = text;\r\n  }\r\n\r\n  getClipboard(): string {\r\n    return this._clipboard;\r\n  }\r\n\r\n  private updateStatusBar() {\r\n    const statusBar = document.getElementById(\"vim-status-bar\");\r\n    if (statusBar) {\r\n      statusBar.textContent = `MODE: ${this._mode}`;\r\n    }\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// src/content.ts\r\n\r\nimport { VimState, Mode } from \"./state\";\r\nimport { handleCommand } from \"./commands\";\r\n\r\n// Initialize Vim state\r\nconst state = new VimState();\r\n\r\n// Create and display the status bar\r\nfunction createStatusBar() {\r\n  const statusBar = document.createElement(\"div\");\r\n  statusBar.id = \"vim-status-bar\";\r\n  statusBar.style.position = \"fixed\";\r\n  statusBar.style.bottom = \"0\";\r\n  statusBar.style.left = \"0\";\r\n  statusBar.style.width = \"100%\";\r\n  statusBar.style.height = \"20px\";\r\n  statusBar.style.backgroundColor = \"#2e3436\";\r\n  statusBar.style.color = \"#ffffff\";\r\n  statusBar.style.fontFamily = \"monospace\";\r\n  statusBar.style.fontSize = \"12px\";\r\n  statusBar.style.textAlign = \"center\";\r\n  statusBar.style.zIndex = \"9999\";\r\n  statusBar.textContent = `MODE: ${state.mode}`;\r\n  document.body.appendChild(statusBar);\r\n}\r\n\r\n// Initialize the extension\r\nfunction init() {\r\n  createStatusBar();\r\n\r\n  document.addEventListener(\"keydown\", (event) => {\r\n    const activeElement = document.activeElement as HTMLElement;\r\n\r\n    // If in Insert mode and focused on input fields, do not intercept\r\n    if (\r\n      state.isInInsertMode() &&\r\n      (activeElement.tagName === \"INPUT\" ||\r\n        activeElement.tagName === \"TEXTAREA\" ||\r\n        activeElement.isContentEditable)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Prevent default behavior for intercepted keys\r\n    const interceptedKeys = [\r\n      \"h\",\r\n      \"j\",\r\n      \"k\",\r\n      \"l\",\r\n      \"i\",\r\n      \"v\",\r\n      \"d\",\r\n      \"y\",\r\n      \"p\",\r\n      \"Escape\",\r\n      \"Esc\",\r\n    ];\r\n    if (interceptedKeys.includes(event.key)) {\r\n      event.preventDefault();\r\n      handleCommand(event.key, state);\r\n    }\r\n  });\r\n}\r\n\r\n// Wait for the DOM to load before initializing\r\nwindow.addEventListener(\"DOMContentLoaded\", init);\r\n"],"names":[],"sourceRoot":""}